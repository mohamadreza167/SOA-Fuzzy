function [S] = Sink_Location(S,nodes)
global Rc
global InitEnergy
global sink
ChengeSink = 1; % True
% Part 1; Voting
Average_Receive_Packet = 0;
Sum_Receive_Packet = 0;
Count = 0;
for i=1:1:nodes
    if S(i).Receive_Packet>0
        Sum_Receive_Packet =  Sum_Receive_Packet + S(i).Receive_Packet;
        Count = Count +1;
    end  
end
Average_Receive_Packet = Sum_Receive_Packet/Count;
% Count for Voting
Count2= 0;
for i=1:1:nodes
    if (S(i).Receive_Packet>0 && S(i).Receive_Packet>Average_Receive_Packet)
        Count2 = Count2 +1;
    end  
end
if (Count2>=((Count/2)+1))
    for i=1:1:nodes
        if S(i).Receive_Packet>Average_Receive_Packet
            if S(i).Rc == Rc
                S(i).Rc = Rc * 2;
                ChengeSink = 0; % False
            end
            
        end
    end
    if (ChengeSink==1)
        SumEnergyCHs = 0;
        SumX = 0;
        SumY = 0;
        for i=1:1:nodes
            if strcmp(S(i).type,'cluster')
                SumEnergyCHs = SumEnergyCHs + (InitEnergy-S(i).E);
                SumX = SumX + S(i).xd*(InitEnergy-S(i).E);
                SumY = SumY + S(i).yd*(InitEnergy-S(i).E);
            end
        end
        sink.xd = SumX/SumEnergyCHs;
        sink.yd = SumY/SumEnergyCHs;
        plot(sink.xd,sink.yd,'k*');
    end
end
end
